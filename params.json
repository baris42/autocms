{"name":"autoCms for Meteor projects","tagline":"autoCms is a simple solution to manage contents in a Meteor.js project. Written completely with javascript. ","body":"### What is autoCms?\r\nAutoCms is a simple solution to manage every kinds of contents. You can create a meteor project just with writing some JSON files. \r\n* Use autoForm to add/edit items\r\n* Define rules for autoCms to list items in collections\r\n* Define authentications for every CRUD actions\r\n* Set rules to determine how to show contents\r\n* Helpers to display and format data from collections\r\n* Helpers to show images from same collections\r\n* Reactive contents and stylesheets\r\n* Seperated user groups\r\n* Define roles for users\r\n\r\n### Heavy dependencies\r\n* accounts\r\n* flow-router (@kadirahq)\r\n* autoForm (@aldeed)\r\n* roles (@alanning)\r\n\r\n### No dependencies  for front-end\r\nYou can use whatever you want for front-end. I picked up bootstrap to show some features of autoCms and used its classes for now. However you can easly adept ionic etc... \r\n\r\n### Some features and an example\r\n```js\r\n//First of all create Mongo collections\r\nblogs = new Mongo.Collection('blogs');\r\n// Attach schema for autoForm\r\nblogs.attachSchema(new SimpleSchema({\r\n  title: {\r\n    type: String,\r\n    label: \"Title\",\r\n    max: 40\r\n  },\r\n  description: {\r\n    type: String,\r\n    label: \"Description\",\r\n    max: 160\r\n  },\r\n  content: {\r\n    type: String,\r\n    label: \"Content\",\r\n    autoform: {\r\n      afFieldInput: {\r\n        type: 'summernote',\r\n        class: 'editor', // optional\r\n        settings: {\r\n          height: 200\r\n        }\r\n      }\r\n    },\r\n    optional: true\r\n  },\r\n  picture: {\r\n    type: String,\r\n    label: 'Picture',\r\n    autoform: {\r\n      afFieldInput: {\r\n        type: 'fileUpload',\r\n        collection: 'Images',\r\n        accept: 'image/*',\r\n        label: 'Choose a file',\r\n        previewTemplate: 'filePreview',\r\n        selectFileBtnTemplate: 'fileButtonSelect',\r\n        removeFileBtnTemplate: 'fileButtonRemove',\r\n        onBeforeInsert: function(fileObj) {\r\n\r\n        },\r\n        onAfterInsert: function(err, fileObj) {\r\n        }\r\n      }\r\n    },\r\n    optional: true\r\n  },\r\n  category: {\r\n    type: String,\r\n    label: \"Category\",\r\n    type: \"select2\",\r\n    autoform: {\r\n      options: function () {\r\n        return blogcategories.find().map(function (p) {\r\n            if (!_.isUndefined(p.description))\r\n              description = p.description;\r\n            else\r\n              description = '';\r\n\r\n            return {label: p.title+' '+description, value: p._id};\r\n        });\r\n      }\r\n    }\r\n  },\r\n  // hide createdBy column\r\n  createdBy: {\r\n    type: String,\r\n    autoform: {\r\n        type: \"hidden\",\r\n        label: false\r\n    },\r\n    autoValue: function () { \r\n      return Meteor.userId() \r\n    }\r\n  },\r\n  createdAt: {\r\n    type: Number,\r\n    autoform: {\r\n        type: \"hidden\",\r\n        label: false\r\n    },\r\n    autoValue: function () { \r\n      return new Date().getTime();\r\n    }\r\n  }\r\n}));\r\n// Define rules for autoCms\r\nblogs.autoCms = {\r\n  wrapper: {\r\n    type: 'table',\r\n    class: 'table table-hover'\r\n  },\r\n  title: 'Blogs',\r\n  buttons: {\r\n    extra: {\r\n      label: '<i class=\"fa fa-eye\" alt=\"Show\"></i> Show',\r\n      class: 'btn btn-xs btn-success',\r\n      auth: function() {    // default true\r\n        return true; \r\n      },\r\n      href: function(data) {\r\n        return location.origin+'/blog/'+data;\r\n      }\r\n    },\r\n    edit: {\r\n      label: '<i class=\"fa fa-pencil-square-o\" alt=\"Edit\"></i> Edit',\r\n      class: 'btn btn-xs btn-default',\r\n      auth: function() {    // default false\r\n        return true; \r\n      }\r\n    },  \r\n    delete: {\r\n      label: '<i class=\"fa fa-trash\" alt=\"Delete\"></i> Delete',\r\n      class: 'btn btn-xs btn-danger',\r\n      auth: function() {    // default false\r\n        return true; \r\n      }\r\n    },\r\n    showNavButtons: true,    // default true\r\n    navButtonInsert: {\r\n      label: '<i class=\"fa fa-plus\"></i>',\r\n      class: 'btn btn-default'\r\n    },\r\n    navButtonList: {\r\n      label: '<i class=\"fa fa-list\"></i>',\r\n      class: 'btn btn-default'\r\n    },\r\n    showActionButtons: true  // default true\r\n  },\r\n  showNo: true,  // default true\r\n  columns: {\r\n    picture: {\r\n      type: 'image',\r\n      width: 60\r\n    },\r\n    title: {\r\n\r\n    },\r\n    description: {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nif (Meteor.isServer) {\r\n  blogs.allow({\r\n    insert: function () {\r\n      return true;\r\n    },\r\n    update: function () {\r\n      return true;\r\n    },\r\n    remove: function () {\r\n      return true;\r\n    }\r\n  });\r\n}\r\n```\r\n\r\n### Authors and Contributors\r\nGunce Bektas (@guncebektas) and Aykut Aktas (@aykutaktas) founded autoCms.\r\n\r\n### Support or Contact\r\nHaving trouble with autoCms? Create an issue or mail me info@guncebektas.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}